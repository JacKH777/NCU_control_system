import serial
import time
import numpy as np
from encoder_function import encoder
ser_1 = serial.Serial("COM12", 115200)

# 角度計
angle_encoder = encoder()
angle_encoder.get_com_port('COM7')

controller_u_output = 0
triangle_angle = [0,302,603,905,1206,1508,1809,2111,2412,2714,3015,3317,3618,3920,4221,4523,4824,5126,5427,5729,6030,6332,6633,6935,7236,7538,7839,8141,8442,8744,9045,9347,9648,9950,10251,10553,10854,11156,11457,11759,12060,12362,12663,12965,13266,13568,13869,14171,14472,14774,15075,15377,15678,15980,16281,16583,16884,17186,17487,17789,18090,18392,18693,18995,19296,19598,19899,20201,20503,20804,21106,21407,21709,22010,22312,22613,22915,23216,23518,23819,24121,24422,24724,25025,25327,25628,25930,26231,26533,26834,27136,27437,27739,28040,28342,28643,28945,29246,29548,29849,29849,29548,29246,28945,28643,28342,28040,27739,27437,27136,26834,26533,26231,25930,25628,25327,25025,24724,24422,24121,23819,23518,23216,22915,22613,22312,22010,21709,21407,21106,20804,20503,20201,19899,19598,19296,18995,18693,18392,18090,17789,17487,17186,16884,16583,16281,15980,15678,15377,15075,14774,14472,14171,13869,13568,13266,12965,12663,12362,12060,11759,11457,11156,10854,10553,10251,9950,9648,9347,9045,8744,8442,8141,7839,7538,7236,6935,6633,6332,6030,5729,5427,5126,4824,4523,4221,3920,3618,3317,3015,2714,2412,2111,1809,1508,1206,905,603,302,0]
triangle_angle_0_255 = [0,1,3,4,5,6,8,9,10,12,13,14,15,17,18,19,21,22,23,24,26,27,28,30,31,32,33,35,36,37,39,40,41,42,44,45,46,48,49,50,51,53,54,55,57,58,59,60,62,63,64,66,67,68,69,71,72,73,75,76,77,78,80,81,82,84,85,86,87,89,90,91,93,94,95,96,98,99,100,102,103,104,105,107,108,109,111,112,113,114,116,117,118,120,121,122,123,125,126,127,127,126,125,123,122,121,120,118,117,116,114,113,112,111,109,108,107,105,104,103,102,100,99,98,96,95,94,93,91,90,89,87,86,85,84,82,81,80,78,77,76,75,73,72,71,69,68,67,66,64,63,62,60,59,58,57,55,54,53,51,50,49,48,46,45,44,42,41,40,39,37,36,35,33,32,31,30,28,27,26,24,23,22,21,19,18,17,15,14,13,12,10,9,8,6,5,4,3,1,0]
sine_angle = np.asarray([30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,33,33,33,33,33,33,34,34,34,34,34,34,35,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,41,41,41,41,42,42,42,43,43,43,44,44,44,45,45,45,46,46,46,47,47,47,48,48,48,49,49,49,50,50,50,51,51,51,52,52,53,53,53,54,54,54,55,55,55,56,56,57,57,57,58,58,58,59,59,60,60,60,60,61,61,62,62,62,63,63,63,64,64,65,65,65,66,66,66,67,67,67,68,68,69,69,69,70,70,70,71,71,71,72,72,72,73,73,73,74,74,74,75,75,75,76,76,76,77,77,77,78,78,78,79,79,79,79,80,80,80,81,81,81,81,82,82,82,82,83,83,83,83,84,84,84,84,85,85,85,85,85,86,86,86,86,86,86,87,87,87,87,87,87,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,89,89,89,89,89,89,89,89,89,89,88,88,88,88,88,88,88,88,87,87,87,87,87,87,86,86,86,86,86,85,85,85,85,85,84,84,84,84,84,83,83,83,83,82,82,82,82,81,81,81,80,80,80,80,79,79,79,78,78,78,78,77,77,77,76,76,76,75,75,75,74,74,74,73,73,73,72,72,72,71,71,71,70,70,69,69,69,68,68,68,67,67,67,66,66,65,65,65,64,64,64,63,63,62,62,62,61,61,61,60,60,59,59,59,58,58,58,57,57,56,56,56,55,55,55,54,54,53,53,53,52,52,52,51,51,51,50,50,49,49,49,48,48,48,47,47,47,46,46,46,45,45,45,44,44,44,43,43,43,42,42,42,42,41,41,41,40,40,40,40,39,39,39,38,38,38,38,37,37,37,37,36,36,36,36,36,35,35,35,35,35,34,34,34,34,34,33,33,33,33,33,33,32,32,32,32,32,32,32,32,31,31,31,31,31,31,31,31,31,31])
i = 0
first_count = 0
actual_angle = 25
test = 0
controller_u_output = int(0/10*65535)
ser_1.write(controller_u_output.to_bytes(2, byteorder='big'))
print(angle_encoder.get_angle())
# while True:
#     # if test < 200:
#     #     i=0
#     if i == 200:
#         i=0
#     controller_u_output = triangle_angle[i]
#     ser_1.write(controller_u_output.to_bytes(2, byteorder='big'))

#     i = i+1
# #     time.sleep(0.02)
# controller_u_output = int(4.5/10*65535)
# ser_1.write(controller_u_output.to_bytes(2, byteorder='big'))
# time.sleep(2)
# print(angle_encoder.get_angle())